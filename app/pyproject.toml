[tool.poetry]
name = "komunitech"
version = "1.0.0"
description = "Platform untuk komunitas menyuarakan kebutuhan mereka"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
Flask = "^2.3.3"
Flask-WTF = "^1.1.1"
Flask-SQLAlchemy = "^3.0.5"
Flask-Migrate = "^4.0.4"
Flask-Login = "^0.6.2"
email-validator = "^2.0.0"
python-dotenv = "^1.0.0"
WTForms = "^3.0.1"
Werkzeug = "^2.3.7"
Jinja2 = "^3.1.2"
gunicorn = "^21.2.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.1"
Pillow = "^10.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-flask = "^1.3.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
pylint = "^3.0.2"
bandit = "^1.7.5"
safety = "^2.3.5"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/venv/*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "*/config.py",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0801",  # duplicate-code
    "W0511",  # fixme
    "W0613",  # unused-argument
    "W0622",  # redefined-builtin
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.basic]
good-names = ["i", "j", "k", "e", "ex", "Run", "_", "id", "db"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "migrations/",
    "tests/",
]